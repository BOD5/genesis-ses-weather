services:
  db:
    image: postgres:17-alpine
    container_name: ses_db
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./dockerfiles/postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - ses-db-network
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 10
  app: &app
    build:
      context: ./dockerfiles
      dockerfile: php/dockerfile
    user: ${UID}:${GID}
    restart: unless-stopped
    container_name: ses-app
    environment:
      COMMAND: php artisan octane:start --watch --host=0.0.0.0 --port=8000
      CHOKIDAR_USEPOLLING: "true"
      PROCESS: app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/var/www:delegated
      - ses_app_composer_data:/.composer
      - ses_app_npm_data:/.npm
    networks:
      - ses-db-network
      - ses-webserver-network
      - ses-redis-network
    healthcheck:
      test: curl -s http://localhost:8000/up >/dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 20
  horizon:
    <<: *app
    container_name: ses-horizon
    environment:
      COMMAND: php artisan horizon
      PROCESS: horizon
    networks:
      - ses-db-network
      - ses-redis-network
    healthcheck:
      test: php artisan horizon:status | grep -q 'is running' # TODO try spatie LARAVEL-HEALTH
      interval: 5s
      timeout: 10s
      retries: 20

  schedule:
    <<: *app
    container_name: ses-schedule
    environment:
      COMMAND: supercronic -quiet /var/www/docker/php/schedule/crontab
      PROCESS: schedule
    networks:
      - ses-db-network
      - ses-redis-network
    healthcheck:
      test: supercronic -test /var/www/docker/php/schedule/crontab | grep -q 'is valid' # TODO try spatie LARAVEL-HEALTH
      interval: 5s
      timeout: 10s
      retries: 2

  webserver:
    image: nginx:1.26.0-alpine
    container_name: ses-webserver
    restart: unless-stopped
    volumes:
      - ./src:/var/www
      - ./dockerfiles/nginx/conf.d/:/etc/nginx/conf.d/
      - ./storage/logs/nginx/:/var/log/nginx/
    ports:
      - 80:80
    networks:
      - ses-webserver-network
    healthcheck:
      test: curl -s http://localhost/up >/dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 20

  redis:
    image: redis:7.2.4-alpine
    restart: unless-stopped
    container_name: ses-redis
    command:
      - "redis-server"
      - "--requirepass ${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    networks:
      - ses-redis-network
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 10s
      retries: 20

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ses-webserver-network
      - ses-redis-network

volumes:
  db_data:
    driver: local
    name: ses_db_data
  redis_data:
    driver: local
    name: ses_redis_data
  ses_app_composer_data:
    driver: local
    name: ses_app_composer_data
  ses_app_npm_data:
    driver: local
    name: ses_app_composer_data

networks:
  ses-db-network:
    driver: bridge
    name: ses-db-network
  ses-webserver-network:
    driver: bridge
    name: ses-webserver-network
  ses-redis-network:
    driver: bridge
    name: ses-redis-network
